import tkinter as tk
from tkinter import Label, filedialog
from PIL import Image, ImageTk
import cv2
from fer import FER

# Initialize the emotion detector
emotion_detector = FER()

# Function to capture and display video
def show_frame():
    ret, frame = cap.read()
    if ret:
        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        faces = face_cascade.detectMultiScale(gray, scaleFactor=1.3, minNeighbors=5)

        for (x, y, w, h) in faces:
            roi_color = frame[y:y + h, x:x + w]
            emotion, score = emotion_detector.top_emotion(roi_color)
            
            if emotion:
                cv2.putText(frame, f'{emotion} ({score*100:.2f}%)', (x, y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (0, 255, 0), 2, cv2.LINE_AA)
            cv2.rectangle(frame, (x, y), (x + w, y + h), (255, 0, 0), 2)

        # Convert frame to RGB
        cv2image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
        img = Image.fromarray(cv2image)
        imgtk = ImageTk.PhotoImage(image=img)
        lmain.imgtk = imgtk
        lmain.configure(image=imgtk)
    lmain.after(10, show_frame)

# Function to open an image file and analyze it
def open_image():
    file_path = filedialog.askopenfilename()
    if file_path:
        img = cv2.imread(file_path)
        gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
        faces = face_cascade.detectMultiScale(gray, scaleFactor=1.3, minNeighbors=5)
        
        for (x, y, w, h) in faces:
            roi_color = img[y:y + h, x:x + w]
            emotion, score = emotion_detector.top_emotion(roi_color)
            
            if emotion:
                cv2.putText(img, f'{emotion} ({score*100:.2f}%)', (x, y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (0, 255, 0), 2, cv2.LINE_AA)
            cv2.rectangle(img, (x, y), (x + w, y + h), (255, 0, 0), 2)

        cv2.imshow('Image', img)

# Set up GUI
root = tk.Tk()
root.title("Emotion Detector")

# Load the pre-trained Haar Cascade for face detection
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Initialize webcam
cap = cv2.VideoCapture(0)

lmain = Label(root)
lmain.pack()

btn = tk.Button(root, text="Open Image", command=open_image)
btn.pack()

show_frame()
root.mainloop()

# Release the capture
cap.release()
cv2.destroyAllWindows()
